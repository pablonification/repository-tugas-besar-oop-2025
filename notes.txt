todo:
fix worldmap (FOREST_RIVER, NPC_HOME, Ocean, MOUNTAIN_LAKE) blm di implement

Roadmap Integrasi Model ke GUI Swing "Spakbor Hills"
Fase 1: Interaksi Dasar & Pertanian (Sebagian Besar Sudah/Sedang Dikerjakan)
[SELESAI] Setup Dasar GUI: GameFrame, GamePanel, render map dasar & pemain.
[SELESAI] Info Panel Pemain: Nama, Energi, Gold, Waktu, Musim, Cuaca, Item Terpilih.
[SELESAI] Gerakan Pemain: WASD/Arrow keys.
[SELESAI] Pemilihan Item dari Inventory: Menggunakan tombol (misal, 1 dan 2) untuk mengganti selectedItem dari semua item di inventory.
Aksi Pertanian Dasar:
[SELESAI] Tilling (Mencangkul): Tombol 'E' jika Hoe dipilih.
[SELESAI] Watering (Menyiram): Tombol 'E' jika Watering Can dipilih (atau 'R').
[SELESAI] Planting (Menanam): Tombol 'E' jika Seed dipilih.
[SELESAI] *Memastikan tile sudah TILLED (tidak perlu isWatered sebelum tanam).
[SELESAI] *Mengurangi bibit dari inventory.
[SELESAI] Harvesting (Memanen): Tombol 'E' sebagai fallback atau jika tanaman siap panen.
[SELESAI] *Menambahkan hasil panen ke inventory.
[SELESAI] Recover Land (Memulihkan Lahan): Tombol 'E' jika Pickaxe dipilih.
[SELESAI] Pertumbuhan Tanaman:
[SELESAI] *Logika Tile.updateDaily() untuk pertumbuhan berdasarkan penyiraman/hujan dan musim.
[SELESAI] *Aturan "siram setiap 2 hari sekali saat cuaca panas" (IMPLEMENTED in Tile.updateDaily).
[SELESAI] *Visualisasi Tile & Tanaman (di GamePanel.drawFarmMap):
[SELESAI] Warna dasar untuk tile type (grass, tillable, tilled, planted, watered).
[SELESAI] Visualisasi Pertumbuhan Tanaman:
[SELESAI] Mengubah tampilan tile PLANTED berdasarkan growthDays relatif terhadap daysToHarvest (perubahan warna dari hijau muda ke hijau tua, lalu kuning saat siap panen).
[SELESAI] Indikasi jelas jika tanaman siap panen (isHarvestable()) dengan warna kuning.
Aksi Makan (Eating):
[SELESAI] Input Pemain: Tombol 'F' digunakan.
[SELESAI] GameController.requestEatSelectedItem():
Memanggil player.eat() jika selectedItem adalah EdibleItem dan valid.
Menyesuaikan energi pemain (berdasarkan EdibleItem.getEnergyRestore()).
Memajukan waktu permainan (5 menit).
Item dikonsumsi dari inventory.
Menangani kasus energi penuh (makan dibatalkan jika item memberi energi positif).
Menangani kasus item habis setelah dimakan (selectedItem di-update oleh controller).
[SELESAI] Feedback Visual/Audio: Konfirmasi via perubahan energi di info panel dan log konsol.
Fase 2: Ekonomi & Interaksi Dunia Luar
Toko (Store):
[IMPLEMENTED] GUI Toko (Beli): Dialog JOptionPane via tombol 'T' untuk menampilkan item yang dijual dari Store.java (Crop, Seed, Food, Equipment tertentu).
Menampilkan harga beli dari PriceList.
[IMPLEMENTED] Pembelian Item (via GUI Toko):
Input jumlah dari pemain (JOptionPane).
Memvalidasi gold pemain (dilakukan oleh Store.sellToPlayer).
Menambahkan item ke inventory pemain & mengurangi gold (dilakukan oleh Store.sellToPlayer).
Feedback via JOptionPane.
[UNTUK DILAKUKAN] Penyempurnaan GUI Toko: Tampilan yang lebih baik (misal, JDialog kustom, kategori item, tombol +/- untuk jumlah).
[UNTUK DILAKUKAN] Interaksi dengan NPC Emily untuk membuka toko (jika diperlukan sebagai alternatif tombol 'T').
Shipping Bin:
[IMPLEMENTED] GUI Shipping Bin: Dialog untuk memilih item dari inventory pemain yang bisa dijual (Crop, Fish, Food, MiscItem) via tombol 'B'.
[IMPLEMENTED] Penjualan Item:
Input jumlah.
Memindahkan item dari inventory ke "bin" (logika di ShippingBin.java).
Pembatasan 16 slot item unik.
Penjualan hanya sekali sehari.
[IMPLEMENTED] Pemrosesan Akhir Hari (Farm.nextDay()):
Menghitung total penjualan dari ShippingBin berdasarkan PriceList.
Menambahkan gold ke pemain.
Mengosongkan ShippingBin.
[SELESAI] Feedback yang Jelas: Pesan bahwa gold akan diterima besok (saat item ditaruh) dan dialog JOptionPane di awal hari berikutnya (via GamePanel.showEndOfDayMessage) jika ada penjualan atau kejadian pingsan.
Gold & Inventory Display:
[SELESAI] Sudah ditampilkan di Info Panel, pastikan selalu update setelah transaksi.
Visiting (Pindah Map):
[SEBAGIAN SUDAH] Logika Pemicu: Pemain bergerak ke tepi Farm Map (tile tipe ENTRY_POINT). Player.isOnEntryPoint() mendeteksi ini.
[SELESAI] GUI Pemilihan Lokasi: GamePanel.showWorldMapSelectionDialog() menampilkan JOptionPane dengan daftar tujuan dari LocationType saat pemain di entry point. Pilihan SEKARANG memicu perpindahan map via GameController.
[CATATAN] Akses Toko (Store): Saat ini Toko bisa diakses via tombol 'T' langsung. Rencana jangka panjang adalah Toko diakses sebagai salah satu tujuan dari GUI Pemilihan Lokasi setelah pemain mencapai Entry Point di FarmMap dan memilih 'STORE'. Tombol 'T' bisa dipertimbangkan untuk dihapus atau menjadi shortcut khusus jika desain akhir memungkinkan.
[SELESAI] GameController.requestVisit(destination):
[SELESAI] Memanggil player.visit().
[SELESAI] Mengubah currentMap di Player dan FarmModel.
[SELESAI] Memuat dan merender peta baru di GamePanel. (GamePanel kini render player.getCurrentMap() dengan camera).
[SEBAGIAN SUDAH] Representasi World Map: Bisa berupa peta visual sederhana atau hanya daftar lokasi. (Daftar lokasi berfungsi, peta generik dirender, tampilan unik per area belum ada).
Fase 3: Aksi Lanjutan & Interaksi NPC
Fishing (Memancing):
[IMPLEMENTED] Kondisi Memancing: Pemain di dekat tile air (Pond, Forest River, Mountain Lake, Ocean) dan Fishing Rod dipilih.
[IMPLEMENTED] Input Pemain: Tombol 'E' (atau tombol khusus).
[IMPLEMENTED] GameController.requestFish():
Memulai logika memancing di Player.fish().
Mengurangi energi.
[IMPLEMENTED] Minigame Memancing:
Implementasi RNG untuk menentukan ikan dan tebakan angka via GUI dialog.
Menambahkan ikan ke inventory jika berhasil.
[IMPLEMENTED] Feedback Visual/Audio via dialog boxes dan debug info.
NPC & Interaksi:
[UNTUK DILAKUKAN] Penempatan NPC di Peta Dunia/Rumah NPC. (Saat ini diasumsikan selalu di rumah).
[UNTUK DILAKUKAN] Chatting:
Input pemain jika berada di dekat NPC (setelah Visiting).
GameController.requestChat(npc) -> player.chat(npc).
Menampilkan dialog NPC (bisa JOptionPane atau area teks di GUI).
Update heartPoints.
[UNTUK DILAKUKAN] Gifting:
Input pemain untuk memilih item dari inventory untuk diberikan ke NPC.
GameController.requestGift(npc, item) -> player.gift(npc, item).
Update heartPoints berdasarkan preferensi.
Feedback dari NPC.
[UNTUK DILAKUKAN] Proposing & Marrying:
Memerlukan ProposalRing.
Kondisi heartPoints maksimal, status NPC.
Input pemain -> Controller -> Model.
Feedback dan perubahan status.
Efek Marry (time skip, dll.).
Cooking (Memasak):
[UNTUK DILAKUKAN] Kondisi Memasak: Pemain di House (atau dekat Stove jika ada bonus furnitur).
[UNTUK DILAKUKAN] GUI Memasak:
Menampilkan daftar resep yang diketahui/bisa dibuat.
Menunjukkan bahan yang dibutuhkan vs. yang dimiliki.
Memilih bahan bakar (Coal, Firewood).
[UNTUK DILAKUKAN] Input Pemain -> GameController.requestCook(recipe, fuel) -> player.cook():
Mengurangi bahan, bahan bakar, energi.
Penanganan aksi pasif (1 jam) -> makanan muncul di inventory setelahnya. (Ini perlu mekanisme timer/event).
Sleeping (Tidur Normal):
[UNTUK DILAKUKAN] Interaksi dengan Tempat Tidur di Rumah: (Perlu House Map jika ada bonus furnitur, atau aksi umum jika di House).
[UNTUK DILAKUKAN] Input Pemain -> GameController.requestSleep():
Memanggil player.sleep().
Memanggil farmModel.nextDay().
Memulihkan energi penuh (atau setengah jika ada penalti energi rendah sebelum tidur, berbeda dari pass-out).
Fase 4: Waktu, Cuaca, dan Sistem Lainnya
Sistem Waktu & Pergantian Hari/Musim:
[SEBAGIAN SUDAH] GameTime menghitung waktu, hari, musim. Farm.nextDay() memproses pergantian.
[CHEAT DITAMBAHKAN] Cheat untuk mengubah Musim (spring, summer, fall, winter) via input dialog (tombol C).
[UNTUK DILAKUKAN] Efek visual/audio untuk pergantian waktu (misal, warna langit meredup di malam hari di GamePanel).
[UNTUK DILAKUKAN] Sinkronisasi Waktu Nyata vs Game: (Spesifikasi: "1 detik di dunia nyata = 5 menit di dunia permainan"). Ini perlu game loop utama yang meng-tick GameTime.advance() secara berkala. Saat ini, waktu hanya maju signifikan saat nextDay atau aksi tertentu.
Cuaca:
[SEBAGIAN SUDAH] GameTime punya currentWeather. Tile.updateDaily() menggunakan info hujan.
[CHEAT DITAMBAHKAN] Cheat untuk mengubah Cuaca (sunny, rainy) via input dialog (tombol C).
[UNTUK DILAKUKAN] Efek Visual Cuaca: Partikel hujan di GamePanel.
[UNTUK DILAKUKAN] Watching TV: Aksi untuk mengetahui cuaca besok (perlu GUI interaksi dengan TV jika ada).
End Game Statistics:
[UNTUK DILAKUKAN] Pemicu Tampilan Statistik: Mencapai salah satu milestone (gold atau menikah).
[UNTUK DILAKUKAN] GUI untuk Menampilkan Statistik: Mengambil data dari EndGameStatistics.
Fase 5: Menu dan Fitur Tambahan (Sesuai Spesifikasi Bonus)
Menu Game Utama (CLI atau GUI Awal):
[UNTUK DILAKUKAN] New Game, Load Game (Bonus), Help, View Player Info, Statistics, Credits, Exit.
View Player Info bisa berupa dialog yang menampilkan atribut pemain.
Statistics bisa memicu tampilan statistik jika sudah ada.
Implementasi Bonus (jika dikerjakan):
Furnitures, Keyboard/Mouse Input (sudah sebagian), Free Market, Gambling, Save/Load, NPC Easter Egg. Masing-masing akan punya sub-task sendiri.



Hotkey:
T: Toko/Store
E: Action seperti Cangkul, nanam, siram, harvest
F: Makan
B: ShippingBin (Jual)
P:
1, 2: Swap Tools
C: Cheat weather dan season

Question:
Store bukannya di WorldMap ya?